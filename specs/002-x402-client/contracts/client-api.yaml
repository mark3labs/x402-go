openapi: 3.0.0
info:
  title: x402 Payment Client API
  version: 1.0.0
  description: Go library API for x402 payment client

paths: {}  # Library API, not REST endpoints

components:
  schemas:
    # Configuration Schemas
    ClientConfig:
      type: object
      properties:
        signers:
          type: array
          items:
            $ref: '#/components/schemas/SignerConfig'
        httpClient:
          type: object
          description: Optional custom http.Client configuration
          
    SignerConfig:
      type: object
      required:
        - type
        - network
        - credential
        - tokens
      properties:
        type:
          type: string
          enum: [evm, svm]
        network:
          type: string
          examples: ["base", "base-sepolia", "solana", "solana-devnet"]
        credential:
          $ref: '#/components/schemas/Credential'
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/TokenConfig'
        priority:
          type: integer
          minimum: 0
          default: 0
        maxAmountPerCall:
          type: string
          description: Maximum amount per payment in atomic units
          
    Credential:
      type: object
      properties:
        privateKey:
          type: string
          description: Hex (EVM) or Base58 (Solana) private key
        mnemonic:
          type: string
          description: BIP39 mnemonic phrase
        keystoreFile:
          type: string
          description: Path to keystore file
        keystorePassword:
          type: string
          description: Password for keystore file
      oneOf:
        - required: [privateKey]
        - required: [mnemonic]
        - required: [keystoreFile, keystorePassword]
        
    TokenConfig:
      type: object
      required:
        - address
        - symbol
        - decimals
      properties:
        address:
          type: string
          description: Token contract address (EVM) or mint address (Solana)
        symbol:
          type: string
          examples: ["USDC", "USDT", "SOL"]
        decimals:
          type: integer
          minimum: 0
          maximum: 18
        priority:
          type: integer
          minimum: 0
          default: 0
        name:
          type: string
          description: Human-readable token name
          
    # Runtime Schemas
    PaymentRequirements:
      type: object
      required:
        - scheme
        - network
        - maxAmountRequired
        - asset
        - payTo
        - resource
        - maxTimeoutSeconds
      properties:
        scheme:
          type: string
          enum: ["exact"]
        network:
          type: string
        maxAmountRequired:
          type: string
          description: Amount in atomic units
        asset:
          type: string
          description: Token address
        payTo:
          type: string
          description: Recipient address
        resource:
          type: string
          format: uri
        description:
          type: string
        mimeType:
          type: string
        maxTimeoutSeconds:
          type: integer
        extra:
          type: object
          additionalProperties: true
          
    PaymentPayload:
      type: object
      required:
        - x402Version
        - scheme
        - network
        - payload
      properties:
        x402Version:
          type: integer
          enum: [1]
        scheme:
          type: string
          enum: ["exact"]
        network:
          type: string
        payload:
          oneOf:
            - $ref: '#/components/schemas/EVMPayload'
            - $ref: '#/components/schemas/SVMPayload'
            
    EVMPayload:
      type: object
      required:
        - signature
        - authorization
      properties:
        signature:
          type: string
          description: Hex-encoded signature
        authorization:
          type: object
          required:
            - from
            - to
            - value
            - validAfter
            - validBefore
            - nonce
          properties:
            from:
              type: string
              description: Payer address
            to:
              type: string
              description: Recipient address
            value:
              type: string
              description: Amount in atomic units
            validAfter:
              type: string
              description: Unix timestamp
            validBefore:
              type: string
              description: Unix timestamp
            nonce:
              type: string
              description: 32-byte hex nonce
              
    SVMPayload:
      type: object
      required:
        - transaction
      properties:
        transaction:
          type: string
          description: Base64-encoded partially signed transaction
          
    SettlementResponse:
      type: object
      required:
        - success
        - network
        - payer
      properties:
        success:
          type: boolean
        errorReason:
          type: string
        transaction:
          type: string
          description: Transaction hash
        network:
          type: string
        payer:
          type: string
          description: Payer address
          
    # Error Schemas
    PaymentError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - NO_VALID_SIGNER
            - AMOUNT_EXCEEDED
            - INVALID_REQUIREMENTS
            - SIGNING_FAILED
            - NETWORK_ERROR
        message:
          type: string
        details:
          type: object
          additionalProperties: true